# GithHub Actions Workflow generated with Ghygen
name: Code Quality
on:
  push:
    branches:
      - main
      - develop
      - features/**
      - feature/**

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    # Service container Mysql mysql
    services:
      # Label used to access the service container
      mysql:
        # Docker Hub image (also with version)
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE:  db_test_laravel
        ## map the "external" 33306 port with the "internal" 3306
        ports:
          - 33306:3306
        # Set health checks to wait until mysql database has started (it takes some seconds to start)
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      matrix:
        operating-system: [ubuntu-latest, windows-latest]
        php-versions: [ '8.0','8.1', '8.2' ]
        dependency-stability: [ 'prefer-none' ]

    name: P${{ matrix.php-versions }} - L${{ matrix.laravel }} - ${{ matrix.dependency-stability }} - ${{ matrix.operating-system}}

    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '18.x'
      - name: Install NPM packages
        run: npm ci
      - name: Build frontend
        run: npm run development
      - name: Install PHP versions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Dependencies
        if: steps.vendor-cache.outputs.cache-hit != 'true'
        run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Update Dependencies with latest stable
        if: matrix.dependency-stability == 'prefer-stable'
        run: composer update --prefer-stable
      - name: Update Dependencies with lowest stable
        if: matrix.dependency-stability == 'prefer-lowest'
        run: composer update --prefer-stable --prefer-lowest

      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Run Migrations
        # Set environment
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: db_test_laravel
          DB_PORT: 33306
          DB_USER: root

        run: php artisan migrate

      - name: Show dir
        run: pwd
      - name: PHP Version
        run: php --version

      # Code quality
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        # Set environment
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: db_test_laravel
          DB_PORT: 33306
          DB_USER: root

        run: vendor/bin/phpunit --testdox



      - name: Execute Code Sniffer via phpcs
        run: |
          vendor/bin/phpcs --standard=PSR12 app

      - name: Execute Code Static Analysis (PHP Stan + Larastan)
        run: |
          vendor/bin/phpstan analyse app -c ./phpstan.neon  --no-progress

